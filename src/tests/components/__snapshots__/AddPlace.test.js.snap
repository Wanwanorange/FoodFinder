// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render AddPlace correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddPlace
    addPlace={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          className="entryform"
          onSubmit={[Function]}
>
          <PlacesAutocomplete
                    debounce={200}
                    highlightFirstSuggestion={false}
                    onChange={[Function]}
                    onError={[Function]}
                    searchOptions={Object {}}
                    shouldFetchSuggestions={true}
                    value=""
          >
                    [Function]
          </PlacesAutocomplete>
          <select
                    className="spacing"
                    name="category"
                    onChange={[Function]}
          >
                    <option
                              value="bakery"
                    >
                              Bakery
                    </option>
                    <option
                              value="cafe"
                    >
                              Cafe
                    </option>
                    <option
                              value="meal delivery"
                    >
                              Meal Delivery
                    </option>
                    <option
                              value="meal takeaway"
                    >
                              Meal Takeaway
                    </option>
                    <option
                              value="restaurant"
                    >
                              Restaurant
                    </option>
          </select>
          <button
                    className="spacing add-place"
          >
                    Add Place
          </button>
</form>,
        "",
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <PlacesAutocomplete
              debounce={200}
              highlightFirstSuggestion={false}
              onChange={[Function]}
              onError={[Function]}
              searchOptions={Object {}}
              shouldFetchSuggestions={true}
              value=""
>
              [Function]
</PlacesAutocomplete>,
            <select
              className="spacing"
              name="category"
              onChange={[Function]}
>
              <option
                            value="bakery"
              >
                            Bakery
              </option>
              <option
                            value="cafe"
              >
                            Cafe
              </option>
              <option
                            value="meal delivery"
              >
                            Meal Delivery
              </option>
              <option
                            value="meal takeaway"
              >
                            Meal Takeaway
              </option>
              <option
                            value="restaurant"
              >
                            Restaurant
              </option>
</select>,
            <button
              className="spacing add-place"
>
              Add Place
</button>,
          ],
          "className": "entryform",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": [Function],
              "debounce": 200,
              "highlightFirstSuggestion": false,
              "onChange": [Function],
              "onError": [Function],
              "searchOptions": Object {},
              "shouldFetchSuggestions": true,
              "value": "",
            },
            "ref": null,
            "rendered": [Function],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  value="bakery"
>
                  Bakery
</option>,
                <option
                  value="cafe"
>
                  Cafe
</option>,
                <option
                  value="meal delivery"
>
                  Meal Delivery
</option>,
                <option
                  value="meal takeaway"
>
                  Meal Takeaway
</option>,
                <option
                  value="restaurant"
>
                  Restaurant
</option>,
              ],
              "className": "spacing",
              "name": "category",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Bakery",
                  "value": "bakery",
                },
                "ref": null,
                "rendered": "Bakery",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Cafe",
                  "value": "cafe",
                },
                "ref": null,
                "rendered": "Cafe",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Meal Delivery",
                  "value": "meal delivery",
                },
                "ref": null,
                "rendered": "Meal Delivery",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Meal Takeaway",
                  "value": "meal takeaway",
                },
                "ref": null,
                "rendered": "Meal Takeaway",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Restaurant",
                  "value": "restaurant",
                },
                "ref": null,
                "rendered": "Restaurant",
                "type": "option",
              },
            ],
            "type": "select",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add Place",
              "className": "spacing add-place",
            },
            "ref": null,
            "rendered": "Add Place",
            "type": "button",
          },
        ],
        "type": "form",
      },
      "",
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            className="entryform"
            onSubmit={[Function]}
>
            <PlacesAutocomplete
                        debounce={200}
                        highlightFirstSuggestion={false}
                        onChange={[Function]}
                        onError={[Function]}
                        searchOptions={Object {}}
                        shouldFetchSuggestions={true}
                        value=""
            >
                        [Function]
            </PlacesAutocomplete>
            <select
                        className="spacing"
                        name="category"
                        onChange={[Function]}
            >
                        <option
                                    value="bakery"
                        >
                                    Bakery
                        </option>
                        <option
                                    value="cafe"
                        >
                                    Cafe
                        </option>
                        <option
                                    value="meal delivery"
                        >
                                    Meal Delivery
                        </option>
                        <option
                                    value="meal takeaway"
                        >
                                    Meal Takeaway
                        </option>
                        <option
                                    value="restaurant"
                        >
                                    Restaurant
                        </option>
            </select>
            <button
                        className="spacing add-place"
            >
                        Add Place
            </button>
</form>,
          "",
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <PlacesAutocomplete
                debounce={200}
                highlightFirstSuggestion={false}
                onChange={[Function]}
                onError={[Function]}
                searchOptions={Object {}}
                shouldFetchSuggestions={true}
                value=""
>
                [Function]
</PlacesAutocomplete>,
              <select
                className="spacing"
                name="category"
                onChange={[Function]}
>
                <option
                                value="bakery"
                >
                                Bakery
                </option>
                <option
                                value="cafe"
                >
                                Cafe
                </option>
                <option
                                value="meal delivery"
                >
                                Meal Delivery
                </option>
                <option
                                value="meal takeaway"
                >
                                Meal Takeaway
                </option>
                <option
                                value="restaurant"
                >
                                Restaurant
                </option>
</select>,
              <button
                className="spacing add-place"
>
                Add Place
</button>,
            ],
            "className": "entryform",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": [Function],
                "debounce": 200,
                "highlightFirstSuggestion": false,
                "onChange": [Function],
                "onError": [Function],
                "searchOptions": Object {},
                "shouldFetchSuggestions": true,
                "value": "",
              },
              "ref": null,
              "rendered": [Function],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="bakery"
>
                    Bakery
</option>,
                  <option
                    value="cafe"
>
                    Cafe
</option>,
                  <option
                    value="meal delivery"
>
                    Meal Delivery
</option>,
                  <option
                    value="meal takeaway"
>
                    Meal Takeaway
</option>,
                  <option
                    value="restaurant"
>
                    Restaurant
</option>,
                ],
                "className": "spacing",
                "name": "category",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Bakery",
                    "value": "bakery",
                  },
                  "ref": null,
                  "rendered": "Bakery",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Cafe",
                    "value": "cafe",
                  },
                  "ref": null,
                  "rendered": "Cafe",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Meal Delivery",
                    "value": "meal delivery",
                  },
                  "ref": null,
                  "rendered": "Meal Delivery",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Meal Takeaway",
                    "value": "meal takeaway",
                  },
                  "ref": null,
                  "rendered": "Meal Takeaway",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Restaurant",
                    "value": "restaurant",
                  },
                  "ref": null,
                  "rendered": "Restaurant",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add Place",
                "className": "spacing add-place",
              },
              "ref": null,
              "rendered": "Add Place",
              "type": "button",
            },
          ],
          "type": "form",
        },
        "",
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
